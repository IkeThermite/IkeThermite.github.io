<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on The Commonplace Book</title>
    <link>http://www.ralphrudd.com/docs/3-areas/programming/</link>
    <description>Recent content in Programming on The Commonplace Book</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.ralphrudd.com/docs/3-areas/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Working with Pelican: Assorted Notes</title>
      <link>http://www.ralphrudd.com/docs/3-areas/programming/working_with_pelican/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://www.ralphrudd.com/docs/3-areas/programming/working_with_pelican/</guid>
      <description>Working with Pelican: Assorted Notes Using Pandoc to Convert Formats Note that the -s specifies to create a standalone document. The general structure:
pandoc inputfile.ext -f fromtype -t totype -s -o outputfile.extWhen converting from Markdown (specifically Kramdown, when I was editing files using VS Code before the switch to Emacs) to reStructuredText, I was getting some weird character rendering. Is there a neat Unicode-related argument that I can pass to Pandoc to sort this out?</description>
    </item>
    
    <item>
      <title>A Minimal Webpage with Pelican</title>
      <link>http://www.ralphrudd.com/docs/3-areas/programming/creating_this_webpage/</link>
      <pubDate>Wed, 08 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://www.ralphrudd.com/docs/3-areas/programming/creating_this_webpage/</guid>
      <description>A Minimal Webpage with Pelican Getting Started I already had Anaconda Python installed, so the first thing to do was to create a conda environment, which I called pelicansite,:
conda create --name pelicansiteand then activate it: :
conda activate pelicansiteThis is all done from the Anaconda Prompt so that the correct environment variables are set. Now I can install the pelican package (I don&#39;t need the optional argument for using markdown).</description>
    </item>
    
    <item>
      <title>Becoming a Quantitative Developer (Deprecated)</title>
      <link>http://www.ralphrudd.com/docs/3-areas/programming/2019-04-25-becoming-a-quantitative-developer/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.ralphrudd.com/docs/3-areas/programming/2019-04-25-becoming-a-quantitative-developer/</guid>
      <description>Table of Contents  Introduction Getting Started Resources  Programming Languages Editor Version Control Software Development    Introduction  This page serves as a learning guide for the important skills of a quantitative developer. It is primarily inspired by the QuantStart Self-Study Plan for Becoming a Quantitative Developer. The skills are divided in four rough and overlapping categories:
 Programming: The ability to solve a problem in a specific programming language.</description>
    </item>
    
  </channel>
</rss>